@model GroupVm
@{
    ViewData["Title"] = "Группа";
}
@{
    string guidValue = Model.Id.ToString();
}

<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white box-shadow mb-3">
        <div class="d-flex flex-grow-1 align-items-center justify-content-between">

            <div class="d-flex justify-content-center">
                <img class="me-1" src="@Url.Content("~/eagle.png")" alt="Орел">
                <div style="font-size: 30px;font-family: 'Montserrat'">@Model.Name</div>
            </div>

            <div class="d-flex justify-content-center align-items-center">
                <div style="font-size: 26px;">Администратор</div>
                <button type="button" class="btn--blue m-0" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    Пригласить
                </button>
            </div>
         
        </div>
    </nav>
</header>

<div class="d-flex flex-column m-2 justefy-content-center text-center">

    <div class="modal fade" id="staticBackdrop" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Ссылка</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="d-flex flex-column modal-body">
                    <div id="linkToCopy" class="p-1 m-2 addLink--container">
                        @Model.Link
                    </div>

                    <button type="button" data-clipboard-target="#linkToCopy" id="copyBtn" class="m-2 flex-grow-1 btn--blue">Копировать</button>

                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-around">
        <div class="cirle"></div>
        <div class="cirle"></div>
        <div class="cirle"></div>
    </div>

    <div class="container">
        <div class="table"></div>
    </div>

    <div class="d-flex justify-content-around">
        <div class="cirle"></div>
        <div class="cirle"></div>
        <div class="cirle"></div>
    </div>

    <div class="m-3">
        <button class="btn--blue" id="stopBtn">Завершить голосование</button>
        <button class="btn--blue" id="newVotingBtn">Начать заново</button>
    </div>

    <div id="chatroom"></div>
 </div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.8/clipboard.min.js"></script>
<script>

    let groupId = '@Html.Raw(guidValue)';

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("http://localhost:5010/user")
        .build();
    
    hubConnection.on("FinishVoting", function(usersVote) {
        let messageElement = document.createElement("p");
        console.log(usersVote)
        for(let i = 0; i < usersVote.length; i++) {
            console.log(usersVote[i])
            let messageElement = document.createElement("p");
            messageElement.textContent = usersVote[i].name + " Vote " +  usersVote[i].value ;
            document.getElementById("chatroom").appendChild(messageElement);
        }
     
    });

     hubConnection.on("UserAdded", function(username) {
        let messageElement = document.createElement("p");
        messageElement.textContent = "Added " +  username ;
        document.getElementById("chatroom").appendChild(messageElement);
    });

    document.getElementById("stopBtn").addEventListener("click", function () {
        
        hubConnection.invoke("FinishVoting", groupId)
            .catch(function (err) {
                return console.error(err.toString());
            });
    });

    hubConnection.start()
        .then(function () {
            hubConnection.invoke("CreateGroup", groupId)
            .catch(function (err) {
                return console.error(err.toString());
            });
        })
        .catch(function (err) {
            return console.error(err.toString());
        });



    var clipboard = new ClipboardJS('#copyBtn');

    clipboard.on('success', function(e) {
        e.clearSelection();
        var copyBtn = document.getElementById("copyBtn");
        copyBtn.classList.add("btn--blue--clicked")
        copyBtn.textContent = "Скопированно"
    });

    
</script>
